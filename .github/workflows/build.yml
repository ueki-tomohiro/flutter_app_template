name: Draft Github Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to create (e.g. v2.10.0). Must include 'v' and must match pubspec"
        required: true
        default: "v2.10.0"
        type: string

permissions: read-all

jobs:
  draft-release:
    name: Draft Github release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Draft release with release notes
        id: create_release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        env:
          GITHUB_TOKEN: ${{ secrets.FLUTTER_GALLERY_RELEASEBOT_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
          generate_release_notes: true

  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [macOS, Windows, iOS, Android]
        include:
          - os: macos-10.15
            target: macOS
            build_target: macos
            build_path: build/macos/Build/Products/Release
            asset_extension: .zip
            asset_content_type: application/zip
          - os: windows-2019
            target: Windows
            build_target: windows
            build_path: build\windows\runner\Release
            asset_extension: .zip
            asset_content_type: application/zip
          - os: macos-10.15
            target: iOS
            build_target: ios
            build_path: build/ios
            asset_extension: .ipa
            asset_content_type: application/octet-stream
          - os: ubuntu-20.04
            target: Android
            build_target: apk
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
            asset_content_type: application/vnd.android.package-archive
      fail-fast: false
    needs: draft-release
    steps:
      - name: set up repository
        uses: actions/checkout@v2
      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            .packages
          key: ${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@d8687e6979e8ef66d2b2970e2c92c1d8e801d7bf
        with:
          channel: master
      - name: Install Android dependencies
        if: matrix.target == 'Android'
        uses: actions/setup-java@e54a62b3df9364d4b4c1c29c7225e57fe605d7dd
        with:
          java-version: "13.x"
      - name: Enable desktop support
        if: matrix.target != 'Android'
        run: |
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
      - run: flutter doctor -v
      - name: Checkout gallery code
        uses: actions/checkout@d171c3b028d844f2bf14e9fdec0c58114451e4bf
      - run: flutter create .
      - run: flutter pub get
      - name: Configure Keystore for Android
        if: matrix.target == 'Android'
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - run: flutter build -v ${{ matrix.build_target }} --release

      - name: Rename build for Android
        if: matrix.target == 'Android'
        run: mv app-release.apk $GITHUB_WORKSPACE/mgdx_pharmacy_app_${{ matrix.target }}.apk
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for iOS
        if: matrix.target == 'iOS'
        run: mv app-release.ipa $GITHUB_WORKSPACE/mgdx_pharmacy_app_${{ matrix.target }}.ipa
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent mgdx_pharmacy_app.app $GITHUB_WORKSPACE/mgdx_pharmacy_app_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\mgdx_pharmacy_app_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: Add packaged build to release draft
        id: upload_release_asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.FLUTTERGALLERYRELEASEBOT_TOKEN }}
        with:
          upload_url: ${{ needs.draft-release.outputs.upload_url }}
          asset_path: ./mgdx_pharmacy_app_${{ matrix.target }}${{ matrix.asset_extension }}
          asset_name: mgdx_pharmacy_app_${{ matrix.target }}${{ matrix.asset_extension }}
          asset_content_type: ${{ matrix.asset_content_type }}
          overwrite: true